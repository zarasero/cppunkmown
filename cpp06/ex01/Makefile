# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: zserobia <zserobia@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2025/03/07 19:38:03 by zserobia          #+#    #+#              #
#    Updated: 2025/03/07 19:45:17 by zserobia         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

NAME = Serializer

# Список исходных файлов, здесь у нас только один файл megaphone.cpp
SRC = main.cpp Serializer.cpp

# Список объектных файлов, который получается путём замены расширения .cpp на .o в списке исходников
OBJ = $(SRC:.cpp=.o)

# Флаги компилятора:
# -Wall - включает все предупреждения
# -Wextra - дополнительные предупреждения
# -Werror - преобразует предупреждения в ошибки
# -g - добавляет отладочную информацию
# -std=c++98 - используем стандарт C++98
CFLAGS = -Wall -Wextra -Werror -g -std=c++98

# Основная цель, которая будет выполняться при вызове make без аргументов
all: $(NAME)

# Правило для создания исполняемого файла $(NAME) из объектных файлов $(OBJ)
$(NAME): $(OBJ)
	c++ $(CFLAGS) -o $(NAME) $(OBJ)

# Правило для удаления объектных файлов (при очистке)
clean:
	rm -f $(OBJ)

# Правило для полной очистки (удаляет объектные файлы и исполняемый файл)
fclean: clean
	rm -f $(NAME)

# Правило для пересборки (очистка и полная пересборка проекта)
re: fclean all

# Шаблон для компиляции объектных файлов:
# Для каждого .cpp файла создаем соответствующий .o файл
%.o: %.cpp
	c++ $(CFLAGS) -c $< -o $@

